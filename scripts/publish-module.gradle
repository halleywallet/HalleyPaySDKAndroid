apply plugin: 'maven-publish'
apply plugin: 'signing'

// for when use .jar file for publish
//task androidSourcesJar(type: Jar) {
//    archiveClassifier.set('sources')
//    if (project.plugins.findPlugin("io.github.halleywallet")) {
//        from android.sourceSets.main.java.srcDirs
//    } else {
//        from android.sourceSets.main.java.srcDirs
//    }
//}
//artifacts {
//    archives androidSourcesJar
//}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION


project.afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION

//              from components.release  // release original code

//              artifact("$buildDir/libs/${project.getName()}-${version}.jar") // release with jar file. this way has problem
//              artifact androidSourcesJar

                // this way hides the codes
                artifact("$buildDir/outputs/aar/HalleyWallet-release.aar")

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = PUBLISH_DESCRIPTION
                    url = PUBLISH_URL
                    licenses {
                        license {
                            name = PUBLISH_LICENSE_NAME
                            url = PUBLISH_LICENSE_URL
                        }
                    }
                    developers {
                        developer {
                            id = PUBLISH_DEVELOPER_ID
                            name = PUBLISH_DEVELOPER_NAME
                            email = PUBLISH_DEVELOPER_EMAIL
                        }
                    }
                    scm {
                        connection = PUBLISH_SCM_CONNECTION
                        developerConnection = PUBLISH_SCM_DEVELOPER_CONNECTION
                        url = PUBLISH_SCM_URL
                    }
                }

            }
        }
    }
}

def getSigningKeyId() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("signing.keyId")
}

def getSigningPassword() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("signing.password")
}

def getSigningSecretKeyRingFile() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("signing.secretKeyRingFile")
}

ext["signing.keyId"] = getSigningKeyId()
ext["signing.password"] = getSigningPassword()
ext["signing.secretKeyRingFile"] = getSigningSecretKeyRingFile()

signing {
    sign publishing.publications
}